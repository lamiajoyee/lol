//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace App2
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::App2.App2_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::App2.App2_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::App2.App2_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace App2.App2_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[56];
            _typeNameTable[0] = "Blend.SampleData.SampleDataSource.SampleDataSource";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "Blend.SampleData.SampleDataSource.GroupCollection";
            _typeNameTable[3] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource.Group>";
            _typeNameTable[4] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource.Group>";
            _typeNameTable[5] = "Blend.SampleData.SampleDataSource.Group";
            _typeNameTable[6] = "Blend.SampleData.SampleDataSource.ItemCollection";
            _typeNameTable[7] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource.Item>";
            _typeNameTable[8] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource.Item>";
            _typeNameTable[9] = "Blend.SampleData.SampleDataSource.Item";
            _typeNameTable[10] = "String";
            _typeNameTable[11] = "Windows.UI.Xaml.Media.ImageSource";
            _typeNameTable[12] = "Blend.SampleData.SampleDataSource.rotation";
            _typeNameTable[13] = "System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource.rotationItem>";
            _typeNameTable[14] = "System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource.rotationItem>";
            _typeNameTable[15] = "Blend.SampleData.SampleDataSource.rotationItem";
            _typeNameTable[16] = "App2.ViewModel.ViewModelLocator";
            _typeNameTable[17] = "App2.ViewModel.MainViewModel";
            _typeNameTable[18] = "GalaSoft.MvvmLight.ViewModelBase";
            _typeNameTable[19] = "GalaSoft.MvvmLight.ObservableObject";
            _typeNameTable[20] = "Windows.UI.Text.FontWeight";
            _typeNameTable[21] = "System.ValueType";
            _typeNameTable[22] = "App2.ExpaControl.ExpanderControl";
            _typeNameTable[23] = "App2.ExpaControl.HeaderedItemsControl";
            _typeNameTable[24] = "Windows.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[25] = "Boolean";
            _typeNameTable[26] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[27] = "Windows.UI.Xaml.Style";
            _typeNameTable[28] = "GalaSoft.MvvmLight.Command.RelayCommand`1<Object>";
            _typeNameTable[29] = "System.Collections.ObjectModel.ObservableCollection`1<App2.Model.Players>";
            _typeNameTable[30] = "System.Collections.ObjectModel.Collection`1<App2.Model.Players>";
            _typeNameTable[31] = "App2.Model.Players";
            _typeNameTable[32] = "Int32";
            _typeNameTable[33] = "System.Collections.ObjectModel.ObservableCollection`1<App2.Model.Abilities>";
            _typeNameTable[34] = "System.Collections.ObjectModel.Collection`1<App2.Model.Abilities>";
            _typeNameTable[35] = "App2.Model.Abilities";
            _typeNameTable[36] = "System.Collections.ObjectModel.ObservableCollection`1<App2.Model.Items>";
            _typeNameTable[37] = "System.Collections.ObjectModel.Collection`1<App2.Model.Items>";
            _typeNameTable[38] = "App2.Model.Items";
            _typeNameTable[39] = "System.Collections.ObjectModel.ObservableCollection`1<App2.Model.GroupInfoList>";
            _typeNameTable[40] = "System.Collections.ObjectModel.Collection`1<App2.Model.GroupInfoList>";
            _typeNameTable[41] = "App2.Model.GroupInfoList";
            _typeNameTable[42] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[43] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[44] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[45] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[46] = "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior";
            _typeNameTable[47] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[48] = "Microsoft.Xaml.Interactions.Core.NavigateToPageAction";
            _typeNameTable[49] = "App2.Champion";
            _typeNameTable[50] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[51] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[52] = "App2.FirstPage";
            _typeNameTable[53] = "App2.Item";
            _typeNameTable[54] = "App2.ItemsPage";
            _typeNameTable[55] = "App2.MainPage";

            _typeTable = new global::System.Type[56];
            _typeTable[0] = typeof(global::Blend.SampleData.SampleDataSource.SampleDataSource);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::Blend.SampleData.SampleDataSource.GroupCollection);
            _typeTable[3] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource.Group>);
            _typeTable[4] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource.Group>);
            _typeTable[5] = typeof(global::Blend.SampleData.SampleDataSource.Group);
            _typeTable[6] = typeof(global::Blend.SampleData.SampleDataSource.ItemCollection);
            _typeTable[7] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource.Item>);
            _typeTable[8] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource.Item>);
            _typeTable[9] = typeof(global::Blend.SampleData.SampleDataSource.Item);
            _typeTable[10] = typeof(global::System.String);
            _typeTable[11] = typeof(global::Windows.UI.Xaml.Media.ImageSource);
            _typeTable[12] = typeof(global::Blend.SampleData.SampleDataSource.rotation);
            _typeTable[13] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource.rotationItem>);
            _typeTable[14] = typeof(global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource.rotationItem>);
            _typeTable[15] = typeof(global::Blend.SampleData.SampleDataSource.rotationItem);
            _typeTable[16] = typeof(global::App2.ViewModel.ViewModelLocator);
            _typeTable[17] = typeof(global::App2.ViewModel.MainViewModel);
            _typeTable[18] = typeof(global::GalaSoft.MvvmLight.ViewModelBase);
            _typeTable[19] = typeof(global::GalaSoft.MvvmLight.ObservableObject);
            _typeTable[20] = typeof(global::Windows.UI.Text.FontWeight);
            _typeTable[21] = typeof(global::System.ValueType);
            _typeTable[22] = typeof(global::App2.ExpaControl.ExpanderControl);
            _typeTable[23] = typeof(global::App2.ExpaControl.HeaderedItemsControl);
            _typeTable[24] = typeof(global::Windows.UI.Xaml.Controls.ItemsControl);
            _typeTable[25] = typeof(global::System.Boolean);
            _typeTable[26] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[27] = typeof(global::Windows.UI.Xaml.Style);
            _typeTable[28] = typeof(global::GalaSoft.MvvmLight.Command.RelayCommand<global::System.Object>);
            _typeTable[29] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::App2.Model.Players>);
            _typeTable[30] = typeof(global::System.Collections.ObjectModel.Collection<global::App2.Model.Players>);
            _typeTable[31] = typeof(global::App2.Model.Players);
            _typeTable[32] = typeof(global::System.Int32);
            _typeTable[33] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::App2.Model.Abilities>);
            _typeTable[34] = typeof(global::System.Collections.ObjectModel.Collection<global::App2.Model.Abilities>);
            _typeTable[35] = typeof(global::App2.Model.Abilities);
            _typeTable[36] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::App2.Model.Items>);
            _typeTable[37] = typeof(global::System.Collections.ObjectModel.Collection<global::App2.Model.Items>);
            _typeTable[38] = typeof(global::App2.Model.Items);
            _typeTable[39] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::App2.Model.GroupInfoList>);
            _typeTable[40] = typeof(global::System.Collections.ObjectModel.Collection<global::App2.Model.GroupInfoList>);
            _typeTable[41] = typeof(global::App2.Model.GroupInfoList);
            _typeTable[42] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[43] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[44] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[45] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[46] = typeof(global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior);
            _typeTable[47] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[48] = typeof(global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction);
            _typeTable[49] = typeof(global::App2.Champion);
            _typeTable[50] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[51] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[52] = typeof(global::App2.FirstPage);
            _typeTable[53] = typeof(global::App2.Item);
            _typeTable[54] = typeof(global::App2.ItemsPage);
            _typeTable[55] = typeof(global::App2.MainPage);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_SampleDataSource() { return new global::Blend.SampleData.SampleDataSource.SampleDataSource(); }
        private object Activate_2_GroupCollection() { return new global::Blend.SampleData.SampleDataSource.GroupCollection(); }
        private object Activate_3_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource.Group>(); }
        private object Activate_4_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource.Group>(); }
        private object Activate_5_Group() { return new global::Blend.SampleData.SampleDataSource.Group(); }
        private object Activate_6_ItemCollection() { return new global::Blend.SampleData.SampleDataSource.ItemCollection(); }
        private object Activate_7_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource.Item>(); }
        private object Activate_8_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource.Item>(); }
        private object Activate_9_Item() { return new global::Blend.SampleData.SampleDataSource.Item(); }
        private object Activate_12_rotation() { return new global::Blend.SampleData.SampleDataSource.rotation(); }
        private object Activate_13_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Blend.SampleData.SampleDataSource.rotationItem>(); }
        private object Activate_14_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Blend.SampleData.SampleDataSource.rotationItem>(); }
        private object Activate_15_rotationItem() { return new global::Blend.SampleData.SampleDataSource.rotationItem(); }
        private object Activate_16_ViewModelLocator() { return new global::App2.ViewModel.ViewModelLocator(); }
        private object Activate_17_MainViewModel() { return new global::App2.ViewModel.MainViewModel(); }
        private object Activate_19_ObservableObject() { return new global::GalaSoft.MvvmLight.ObservableObject(); }
        private object Activate_22_ExpanderControl() { return new global::App2.ExpaControl.ExpanderControl(); }
        private object Activate_23_HeaderedItemsControl() { return new global::App2.ExpaControl.HeaderedItemsControl(); }
        private object Activate_29_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::App2.Model.Players>(); }
        private object Activate_30_Collection() { return new global::System.Collections.ObjectModel.Collection<global::App2.Model.Players>(); }
        private object Activate_31_Players() { return new global::App2.Model.Players(); }
        private object Activate_33_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::App2.Model.Abilities>(); }
        private object Activate_34_Collection() { return new global::System.Collections.ObjectModel.Collection<global::App2.Model.Abilities>(); }
        private object Activate_35_Abilities() { return new global::App2.Model.Abilities(); }
        private object Activate_36_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::App2.Model.Items>(); }
        private object Activate_37_Collection() { return new global::System.Collections.ObjectModel.Collection<global::App2.Model.Items>(); }
        private object Activate_38_Items() { return new global::App2.Model.Items(); }
        private object Activate_39_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::App2.Model.GroupInfoList>(); }
        private object Activate_40_Collection() { return new global::System.Collections.ObjectModel.Collection<global::App2.Model.GroupInfoList>(); }
        private object Activate_41_GroupInfoList() { return new global::App2.Model.GroupInfoList(); }
        private object Activate_43_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_46_EventTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior(); }
        private object Activate_47_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_48_NavigateToPageAction() { return new global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction(); }
        private object Activate_49_Champion() { return new global::App2.Champion(); }
        private object Activate_52_FirstPage() { return new global::App2.FirstPage(); }
        private object Activate_53_Item() { return new global::App2.Item(); }
        private object Activate_54_ItemsPage() { return new global::App2.ItemsPage(); }
        private object Activate_55_MainPage() { return new global::App2.MainPage(); }
        private void VectorAdd_2_GroupCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_3_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_4_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource.Group>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource.Group)item;
            collection.Add(newItem);
        }
        private void VectorAdd_6_ItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_7_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_8_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource.Item>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource.Item)item;
            collection.Add(newItem);
        }
        private void VectorAdd_12_rotation(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource.rotationItem>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource.rotationItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_13_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource.rotationItem>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource.rotationItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_14_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Blend.SampleData.SampleDataSource.rotationItem>)instance;
            var newItem = (global::Blend.SampleData.SampleDataSource.rotationItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_29_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::App2.Model.Players>)instance;
            var newItem = (global::App2.Model.Players)item;
            collection.Add(newItem);
        }
        private void VectorAdd_30_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::App2.Model.Players>)instance;
            var newItem = (global::App2.Model.Players)item;
            collection.Add(newItem);
        }
        private void VectorAdd_33_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::App2.Model.Abilities>)instance;
            var newItem = (global::App2.Model.Abilities)item;
            collection.Add(newItem);
        }
        private void VectorAdd_34_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::App2.Model.Abilities>)instance;
            var newItem = (global::App2.Model.Abilities)item;
            collection.Add(newItem);
        }
        private void VectorAdd_36_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::App2.Model.Items>)instance;
            var newItem = (global::App2.Model.Items)item;
            collection.Add(newItem);
        }
        private void VectorAdd_37_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::App2.Model.Items>)instance;
            var newItem = (global::App2.Model.Items)item;
            collection.Add(newItem);
        }
        private void VectorAdd_39_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::App2.Model.GroupInfoList>)instance;
            var newItem = (global::App2.Model.GroupInfoList)item;
            collection.Add(newItem);
        }
        private void VectorAdd_40_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::App2.Model.GroupInfoList>)instance;
            var newItem = (global::App2.Model.GroupInfoList)item;
            collection.Add(newItem);
        }
        private void VectorAdd_41_GroupInfoList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::App2.Model.Players>)instance;
            var newItem = (global::App2.Model.Players)item;
            collection.Add(newItem);
        }
        private void VectorAdd_43_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_47_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::App2.App2_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::App2.App2_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Blend.SampleData.SampleDataSource.SampleDataSource
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_SampleDataSource;
                userType.AddMemberName("Groups");
                userType.AddMemberName("rotation");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::App2.App2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Blend.SampleData.SampleDataSource.GroupCollection
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource.Group>"));
                userType.CollectionAdd = VectorAdd_2_GroupCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 3:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource.Group>
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource.Group>"));
                userType.Activator = Activate_3_ObservableCollection;
                userType.CollectionAdd = VectorAdd_3_ObservableCollection;
                xamlType = userType;
                break;

            case 4:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource.Group>
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_Collection;
                userType.CollectionAdd = VectorAdd_4_Collection;
                xamlType = userType;
                break;

            case 5:   //  Blend.SampleData.SampleDataSource.Group
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_5_Group;
                userType.AddMemberName("Items");
                userType.AddMemberName("playername");
                userType.AddMemberName("primary");
                userType.AddMemberName("playertitle");
                userType.AddMemberName("img");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  Blend.SampleData.SampleDataSource.ItemCollection
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource.Item>"));
                userType.CollectionAdd = VectorAdd_6_ItemCollection;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource.Item>
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource.Item>"));
                userType.Activator = Activate_7_ObservableCollection;
                userType.CollectionAdd = VectorAdd_7_ObservableCollection;
                xamlType = userType;
                break;

            case 8:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource.Item>
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_8_Collection;
                userType.CollectionAdd = VectorAdd_8_Collection;
                xamlType = userType;
                break;

            case 9:   //  Blend.SampleData.SampleDataSource.Item
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_9_Item;
                userType.AddMemberName("att");
                userType.AddMemberName("def");
                userType.AddMemberName("abi");
                userType.AddMemberName("diff");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 10:   //  String
                xamlType = new global::App2.App2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  Windows.UI.Xaml.Media.ImageSource
                xamlType = new global::App2.App2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  Blend.SampleData.SampleDataSource.rotation
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource.rotationItem>"));
                userType.CollectionAdd = VectorAdd_12_rotation;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  System.Collections.ObjectModel.ObservableCollection`1<Blend.SampleData.SampleDataSource.rotationItem>
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource.rotationItem>"));
                userType.Activator = Activate_13_ObservableCollection;
                userType.CollectionAdd = VectorAdd_13_ObservableCollection;
                xamlType = userType;
                break;

            case 14:   //  System.Collections.ObjectModel.Collection`1<Blend.SampleData.SampleDataSource.rotationItem>
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_14_Collection;
                userType.CollectionAdd = VectorAdd_14_Collection;
                xamlType = userType;
                break;

            case 15:   //  Blend.SampleData.SampleDataSource.rotationItem
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_15_rotationItem;
                userType.AddMemberName("player_name");
                userType.AddMemberName("rotation_img");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  App2.ViewModel.ViewModelLocator
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_16_ViewModelLocator;
                userType.AddMemberName("Main");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  App2.ViewModel.MainViewModel
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.Activator = Activate_17_MainViewModel;
                userType.AddMemberName("GiveDetails");
                userType.AddMemberName("AllPlayers");
                userType.AddMemberName("AllAbilities");
                userType.AddMemberName("AllItems");
                userType.AddMemberName("AllBuildsInto");
                userType.AddMemberName("AllEnchantments");
                userType.AddMemberName("AllRecipes");
                userType.AddMemberName("GroupedExemple");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  GalaSoft.MvvmLight.ViewModelBase
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ObservableObject"));
                userType.AddMemberName("IsInDesignMode");
                xamlType = userType;
                break;

            case 19:   //  GalaSoft.MvvmLight.ObservableObject
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_19_ObservableObject;
                xamlType = userType;
                break;

            case 20:   //  Windows.UI.Text.FontWeight
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 21:   //  System.ValueType
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 22:   //  App2.ExpaControl.ExpanderControl
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("App2.ExpaControl.HeaderedItemsControl"));
                userType.Activator = Activate_22_ExpanderControl;
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("NonExpandableHeader");
                userType.AddMemberName("Expander");
                userType.AddMemberName("ExpanderTemplate");
                userType.AddMemberName("NonExpandableHeaderTemplate");
                userType.AddMemberName("HasItems");
                userType.AddMemberName("IsNonExpandable");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  App2.ExpaControl.HeaderedItemsControl
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ItemsControl"));
                userType.Activator = Activate_23_HeaderedItemsControl;
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("ItemContainerStyle");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  Windows.UI.Xaml.Controls.ItemsControl
                xamlType = new global::App2.App2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 25:   //  Boolean
                xamlType = new global::App2.App2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::App2.App2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  Windows.UI.Xaml.Style
                xamlType = new global::App2.App2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  GalaSoft.MvvmLight.Command.RelayCommand`1<Object>
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  System.Collections.ObjectModel.ObservableCollection`1<App2.Model.Players>
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<App2.Model.Players>"));
                userType.Activator = Activate_29_ObservableCollection;
                userType.CollectionAdd = VectorAdd_29_ObservableCollection;
                xamlType = userType;
                break;

            case 30:   //  System.Collections.ObjectModel.Collection`1<App2.Model.Players>
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_30_Collection;
                userType.CollectionAdd = VectorAdd_30_Collection;
                userType.AddMemberName("Count");
                xamlType = userType;
                break;

            case 31:   //  App2.Model.Players
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_31_Players;
                userType.AddMemberName("id");
                userType.AddMemberName("img");
                userType.AddMemberName("playername");
                userType.AddMemberName("playertitle");
                userType.AddMemberName("primary_secondary");
                userType.AddMemberName("IP");
                userType.AddMemberName("RP");
                userType.AddMemberName("imgBig");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  Int32
                xamlType = new global::App2.App2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 33:   //  System.Collections.ObjectModel.ObservableCollection`1<App2.Model.Abilities>
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<App2.Model.Abilities>"));
                userType.CollectionAdd = VectorAdd_33_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 34:   //  System.Collections.ObjectModel.Collection`1<App2.Model.Abilities>
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_34_Collection;
                userType.CollectionAdd = VectorAdd_34_Collection;
                xamlType = userType;
                break;

            case 35:   //  App2.Model.Abilities
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_35_Abilities;
                userType.AddMemberName("imgAbility");
                userType.AddMemberName("ability");
                userType.AddMemberName("abilityDesc");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  System.Collections.ObjectModel.ObservableCollection`1<App2.Model.Items>
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<App2.Model.Items>"));
                userType.CollectionAdd = VectorAdd_36_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 37:   //  System.Collections.ObjectModel.Collection`1<App2.Model.Items>
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_37_Collection;
                userType.CollectionAdd = VectorAdd_37_Collection;
                xamlType = userType;
                break;

            case 38:   //  App2.Model.Items
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_38_Items;
                userType.AddMemberName("itemName");
                userType.AddMemberName("itemCost");
                userType.AddMemberName("itemBonuses");
                userType.AddMemberName("itemImg");
                userType.AddMemberName("active");
                userType.AddMemberName("passive");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  System.Collections.ObjectModel.ObservableCollection`1<App2.Model.GroupInfoList>
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<App2.Model.GroupInfoList>"));
                userType.CollectionAdd = VectorAdd_39_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 40:   //  System.Collections.ObjectModel.Collection`1<App2.Model.GroupInfoList>
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_40_Collection;
                userType.CollectionAdd = VectorAdd_40_Collection;
                xamlType = userType;
                break;

            case 41:   //  App2.Model.GroupInfoList
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<App2.Model.Players>"));
                userType.Activator = Activate_41_GroupInfoList;
                userType.CollectionAdd = VectorAdd_41_GroupInfoList;
                userType.AddMemberName("Key");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 42:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 43:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_43_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 44:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::App2.App2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 45:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::App2.App2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 46:   //  Microsoft.Xaml.Interactions.Core.EventTriggerBehavior
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_46_EventTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("EventName");
                userType.AddMemberName("SourceObject");
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 47:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_47_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 48:   //  Microsoft.Xaml.Interactions.Core.NavigateToPageAction
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_48_NavigateToPageAction;
                userType.AddMemberName("TargetPage");
                userType.AddMemberName("Parameter");
                xamlType = userType;
                break;

            case 49:   //  App2.Champion
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_49_Champion;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 50:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::App2.App2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 51:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::App2.App2_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 52:   //  App2.FirstPage
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_52_FirstPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 53:   //  App2.Item
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_53_Item;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 54:   //  App2.ItemsPage
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_54_ItemsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 55:   //  App2.MainPage
                userType = new global::App2.App2_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_55_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_SampleDataSource_Groups(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.SampleDataSource)instance;
            return that.Groups;
        }
        private object get_1_Group_Items(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            return that.Items;
        }
        private object get_2_Item_att(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Item)instance;
            return that.att;
        }
        private void set_2_Item_att(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Item)instance;
            that.att = (global::System.String)Value;
        }
        private object get_3_Item_def(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Item)instance;
            return that.def;
        }
        private void set_3_Item_def(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Item)instance;
            that.def = (global::System.String)Value;
        }
        private object get_4_Item_abi(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Item)instance;
            return that.abi;
        }
        private void set_4_Item_abi(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Item)instance;
            that.abi = (global::System.String)Value;
        }
        private object get_5_Item_diff(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Item)instance;
            return that.diff;
        }
        private void set_5_Item_diff(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Item)instance;
            that.diff = (global::System.String)Value;
        }
        private object get_6_Group_playername(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            return that.playername;
        }
        private void set_6_Group_playername(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            that.playername = (global::System.String)Value;
        }
        private object get_7_Group_primary(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            return that.primary;
        }
        private void set_7_Group_primary(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            that.primary = (global::System.String)Value;
        }
        private object get_8_Group_playertitle(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            return that.playertitle;
        }
        private void set_8_Group_playertitle(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            that.playertitle = (global::System.String)Value;
        }
        private object get_9_Group_img(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            return that.img;
        }
        private void set_9_Group_img(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.Group)instance;
            that.img = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_10_SampleDataSource_rotation(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.SampleDataSource)instance;
            return that.rotation;
        }
        private object get_11_rotationItem_player_name(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.rotationItem)instance;
            return that.player_name;
        }
        private void set_11_rotationItem_player_name(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.rotationItem)instance;
            that.player_name = (global::System.String)Value;
        }
        private object get_12_rotationItem_rotation_img(object instance)
        {
            var that = (global::Blend.SampleData.SampleDataSource.rotationItem)instance;
            return that.rotation_img;
        }
        private void set_12_rotationItem_rotation_img(object instance, object Value)
        {
            var that = (global::Blend.SampleData.SampleDataSource.rotationItem)instance;
            that.rotation_img = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_13_ViewModelLocator_Main(object instance)
        {
            var that = (global::App2.ViewModel.ViewModelLocator)instance;
            return that.Main;
        }
        private object get_14_ExpanderControl_IsExpanded(object instance)
        {
            var that = (global::App2.ExpaControl.ExpanderControl)instance;
            return that.IsExpanded;
        }
        private void set_14_ExpanderControl_IsExpanded(object instance, object Value)
        {
            var that = (global::App2.ExpaControl.ExpanderControl)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_15_ExpanderControl_NonExpandableHeader(object instance)
        {
            var that = (global::App2.ExpaControl.ExpanderControl)instance;
            return that.NonExpandableHeader;
        }
        private void set_15_ExpanderControl_NonExpandableHeader(object instance, object Value)
        {
            var that = (global::App2.ExpaControl.ExpanderControl)instance;
            that.NonExpandableHeader = (global::System.Object)Value;
        }
        private object get_16_ExpanderControl_Expander(object instance)
        {
            var that = (global::App2.ExpaControl.ExpanderControl)instance;
            return that.Expander;
        }
        private void set_16_ExpanderControl_Expander(object instance, object Value)
        {
            var that = (global::App2.ExpaControl.ExpanderControl)instance;
            that.Expander = (global::System.Object)Value;
        }
        private object get_17_HeaderedItemsControl_Header(object instance)
        {
            var that = (global::App2.ExpaControl.HeaderedItemsControl)instance;
            return that.Header;
        }
        private void set_17_HeaderedItemsControl_Header(object instance, object Value)
        {
            var that = (global::App2.ExpaControl.HeaderedItemsControl)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_18_ExpanderControl_ExpanderTemplate(object instance)
        {
            var that = (global::App2.ExpaControl.ExpanderControl)instance;
            return that.ExpanderTemplate;
        }
        private void set_18_ExpanderControl_ExpanderTemplate(object instance, object Value)
        {
            var that = (global::App2.ExpaControl.ExpanderControl)instance;
            that.ExpanderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_19_ExpanderControl_NonExpandableHeaderTemplate(object instance)
        {
            var that = (global::App2.ExpaControl.ExpanderControl)instance;
            return that.NonExpandableHeaderTemplate;
        }
        private void set_19_ExpanderControl_NonExpandableHeaderTemplate(object instance, object Value)
        {
            var that = (global::App2.ExpaControl.ExpanderControl)instance;
            that.NonExpandableHeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_20_ExpanderControl_HasItems(object instance)
        {
            var that = (global::App2.ExpaControl.ExpanderControl)instance;
            return that.HasItems;
        }
        private void set_20_ExpanderControl_HasItems(object instance, object Value)
        {
            var that = (global::App2.ExpaControl.ExpanderControl)instance;
            that.HasItems = (global::System.Boolean)Value;
        }
        private object get_21_ExpanderControl_IsNonExpandable(object instance)
        {
            var that = (global::App2.ExpaControl.ExpanderControl)instance;
            return that.IsNonExpandable;
        }
        private void set_21_ExpanderControl_IsNonExpandable(object instance, object Value)
        {
            var that = (global::App2.ExpaControl.ExpanderControl)instance;
            that.IsNonExpandable = (global::System.Boolean)Value;
        }
        private object get_22_HeaderedItemsControl_HeaderTemplate(object instance)
        {
            var that = (global::App2.ExpaControl.HeaderedItemsControl)instance;
            return that.HeaderTemplate;
        }
        private void set_22_HeaderedItemsControl_HeaderTemplate(object instance, object Value)
        {
            var that = (global::App2.ExpaControl.HeaderedItemsControl)instance;
            that.HeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_23_HeaderedItemsControl_ItemContainerStyle(object instance)
        {
            var that = (global::App2.ExpaControl.HeaderedItemsControl)instance;
            return that.ItemContainerStyle;
        }
        private void set_23_HeaderedItemsControl_ItemContainerStyle(object instance, object Value)
        {
            var that = (global::App2.ExpaControl.HeaderedItemsControl)instance;
            that.ItemContainerStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_24_MainViewModel_GiveDetails(object instance)
        {
            var that = (global::App2.ViewModel.MainViewModel)instance;
            return that.GiveDetails;
        }
        private object get_25_MainViewModel_AllPlayers(object instance)
        {
            var that = (global::App2.ViewModel.MainViewModel)instance;
            return that.AllPlayers;
        }
        private object get_26_Players_id(object instance)
        {
            var that = (global::App2.Model.Players)instance;
            return that.id;
        }
        private void set_26_Players_id(object instance, object Value)
        {
            var that = (global::App2.Model.Players)instance;
            that.id = (global::System.Int32)Value;
        }
        private object get_27_Players_img(object instance)
        {
            var that = (global::App2.Model.Players)instance;
            return that.img;
        }
        private void set_27_Players_img(object instance, object Value)
        {
            var that = (global::App2.Model.Players)instance;
            that.img = (global::System.String)Value;
        }
        private object get_28_Players_playername(object instance)
        {
            var that = (global::App2.Model.Players)instance;
            return that.playername;
        }
        private void set_28_Players_playername(object instance, object Value)
        {
            var that = (global::App2.Model.Players)instance;
            that.playername = (global::System.String)Value;
        }
        private object get_29_Players_playertitle(object instance)
        {
            var that = (global::App2.Model.Players)instance;
            return that.playertitle;
        }
        private void set_29_Players_playertitle(object instance, object Value)
        {
            var that = (global::App2.Model.Players)instance;
            that.playertitle = (global::System.String)Value;
        }
        private object get_30_Players_primary_secondary(object instance)
        {
            var that = (global::App2.Model.Players)instance;
            return that.primary_secondary;
        }
        private void set_30_Players_primary_secondary(object instance, object Value)
        {
            var that = (global::App2.Model.Players)instance;
            that.primary_secondary = (global::System.String)Value;
        }
        private object get_31_Players_IP(object instance)
        {
            var that = (global::App2.Model.Players)instance;
            return that.IP;
        }
        private void set_31_Players_IP(object instance, object Value)
        {
            var that = (global::App2.Model.Players)instance;
            that.IP = (global::System.Int32)Value;
        }
        private object get_32_Players_RP(object instance)
        {
            var that = (global::App2.Model.Players)instance;
            return that.RP;
        }
        private void set_32_Players_RP(object instance, object Value)
        {
            var that = (global::App2.Model.Players)instance;
            that.RP = (global::System.Int32)Value;
        }
        private object get_33_Players_imgBig(object instance)
        {
            var that = (global::App2.Model.Players)instance;
            return that.imgBig;
        }
        private void set_33_Players_imgBig(object instance, object Value)
        {
            var that = (global::App2.Model.Players)instance;
            that.imgBig = (global::System.String)Value;
        }
        private object get_34_MainViewModel_AllAbilities(object instance)
        {
            var that = (global::App2.ViewModel.MainViewModel)instance;
            return that.AllAbilities;
        }
        private object get_35_Abilities_imgAbility(object instance)
        {
            var that = (global::App2.Model.Abilities)instance;
            return that.imgAbility;
        }
        private void set_35_Abilities_imgAbility(object instance, object Value)
        {
            var that = (global::App2.Model.Abilities)instance;
            that.imgAbility = (global::System.String)Value;
        }
        private object get_36_Abilities_ability(object instance)
        {
            var that = (global::App2.Model.Abilities)instance;
            return that.ability;
        }
        private void set_36_Abilities_ability(object instance, object Value)
        {
            var that = (global::App2.Model.Abilities)instance;
            that.ability = (global::System.String)Value;
        }
        private object get_37_Abilities_abilityDesc(object instance)
        {
            var that = (global::App2.Model.Abilities)instance;
            return that.abilityDesc;
        }
        private void set_37_Abilities_abilityDesc(object instance, object Value)
        {
            var that = (global::App2.Model.Abilities)instance;
            that.abilityDesc = (global::System.String)Value;
        }
        private object get_38_MainViewModel_AllItems(object instance)
        {
            var that = (global::App2.ViewModel.MainViewModel)instance;
            return that.AllItems;
        }
        private object get_39_Items_itemName(object instance)
        {
            var that = (global::App2.Model.Items)instance;
            return that.itemName;
        }
        private void set_39_Items_itemName(object instance, object Value)
        {
            var that = (global::App2.Model.Items)instance;
            that.itemName = (global::System.String)Value;
        }
        private object get_40_Items_itemCost(object instance)
        {
            var that = (global::App2.Model.Items)instance;
            return that.itemCost;
        }
        private void set_40_Items_itemCost(object instance, object Value)
        {
            var that = (global::App2.Model.Items)instance;
            that.itemCost = (global::System.String)Value;
        }
        private object get_41_Items_itemBonuses(object instance)
        {
            var that = (global::App2.Model.Items)instance;
            return that.itemBonuses;
        }
        private void set_41_Items_itemBonuses(object instance, object Value)
        {
            var that = (global::App2.Model.Items)instance;
            that.itemBonuses = (global::System.String)Value;
        }
        private object get_42_Items_itemImg(object instance)
        {
            var that = (global::App2.Model.Items)instance;
            return that.itemImg;
        }
        private void set_42_Items_itemImg(object instance, object Value)
        {
            var that = (global::App2.Model.Items)instance;
            that.itemImg = (global::System.String)Value;
        }
        private object get_43_Items_active(object instance)
        {
            var that = (global::App2.Model.Items)instance;
            return that.active;
        }
        private void set_43_Items_active(object instance, object Value)
        {
            var that = (global::App2.Model.Items)instance;
            that.active = (global::System.String)Value;
        }
        private object get_44_Items_passive(object instance)
        {
            var that = (global::App2.Model.Items)instance;
            return that.passive;
        }
        private void set_44_Items_passive(object instance, object Value)
        {
            var that = (global::App2.Model.Items)instance;
            that.passive = (global::System.String)Value;
        }
        private object get_45_MainViewModel_AllBuildsInto(object instance)
        {
            var that = (global::App2.ViewModel.MainViewModel)instance;
            return that.AllBuildsInto;
        }
        private object get_46_MainViewModel_AllEnchantments(object instance)
        {
            var that = (global::App2.ViewModel.MainViewModel)instance;
            return that.AllEnchantments;
        }
        private object get_47_MainViewModel_AllRecipes(object instance)
        {
            var that = (global::App2.ViewModel.MainViewModel)instance;
            return that.AllRecipes;
        }
        private object get_48_MainViewModel_GroupedExemple(object instance)
        {
            var that = (global::App2.ViewModel.MainViewModel)instance;
            return that.GroupedExemple;
        }
        private void set_48_MainViewModel_GroupedExemple(object instance, object Value)
        {
            var that = (global::App2.ViewModel.MainViewModel)instance;
            that.GroupedExemple = (global::System.Collections.ObjectModel.ObservableCollection<global::App2.Model.GroupInfoList>)Value;
        }
        private object get_49_GroupInfoList_Key(object instance)
        {
            var that = (global::App2.Model.GroupInfoList)instance;
            return that.Key;
        }
        private void set_49_GroupInfoList_Key(object instance, object Value)
        {
            var that = (global::App2.Model.GroupInfoList)instance;
            that.Key = (global::System.Object)Value;
        }
        private object get_50_Collection_Count(object instance)
        {
            var that = (global::System.Collections.ObjectModel.Collection<global::App2.Model.Players>)instance;
            return that.Count;
        }
        private object get_51_ViewModelBase_IsInDesignMode(object instance)
        {
            var that = (global::GalaSoft.MvvmLight.ViewModelBase)instance;
            return that.IsInDesignMode;
        }
        private object get_52_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_52_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_53_EventTriggerBehavior_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.Actions;
        }
        private object get_54_EventTriggerBehavior_EventName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.EventName;
        }
        private void set_54_EventTriggerBehavior_EventName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.EventName = (global::System.String)Value;
        }
        private object get_55_EventTriggerBehavior_SourceObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.SourceObject;
        }
        private void set_55_EventTriggerBehavior_SourceObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.SourceObject = (global::System.Object)Value;
        }
        private object get_56_EventTriggerBehavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.AssociatedObject;
        }
        private object get_57_NavigateToPageAction_TargetPage(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            return that.TargetPage;
        }
        private void set_57_NavigateToPageAction_TargetPage(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            that.TargetPage = (global::System.String)Value;
        }
        private object get_58_NavigateToPageAction_Parameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            return that.Parameter;
        }
        private void set_58_NavigateToPageAction_Parameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            that.Parameter = (global::System.Object)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::App2.App2_XamlTypeInfo.XamlMember xamlMember = null;
            global::App2.App2_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Blend.SampleData.SampleDataSource.SampleDataSource.Groups":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.SampleDataSource");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "Groups", "Blend.SampleData.SampleDataSource.GroupCollection");
                xamlMember.Getter = get_0_SampleDataSource_Groups;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource.Group.Items":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Group");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "Items", "Blend.SampleData.SampleDataSource.ItemCollection");
                xamlMember.Getter = get_1_Group_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource.Item.att":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Item");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "att", "String");
                xamlMember.Getter = get_2_Item_att;
                xamlMember.Setter = set_2_Item_att;
                break;
            case "Blend.SampleData.SampleDataSource.Item.def":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Item");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "def", "String");
                xamlMember.Getter = get_3_Item_def;
                xamlMember.Setter = set_3_Item_def;
                break;
            case "Blend.SampleData.SampleDataSource.Item.abi":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Item");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "abi", "String");
                xamlMember.Getter = get_4_Item_abi;
                xamlMember.Setter = set_4_Item_abi;
                break;
            case "Blend.SampleData.SampleDataSource.Item.diff":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Item");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "diff", "String");
                xamlMember.Getter = get_5_Item_diff;
                xamlMember.Setter = set_5_Item_diff;
                break;
            case "Blend.SampleData.SampleDataSource.Group.playername":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Group");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "playername", "String");
                xamlMember.Getter = get_6_Group_playername;
                xamlMember.Setter = set_6_Group_playername;
                break;
            case "Blend.SampleData.SampleDataSource.Group.primary":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Group");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "primary", "String");
                xamlMember.Getter = get_7_Group_primary;
                xamlMember.Setter = set_7_Group_primary;
                break;
            case "Blend.SampleData.SampleDataSource.Group.playertitle":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Group");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "playertitle", "String");
                xamlMember.Getter = get_8_Group_playertitle;
                xamlMember.Setter = set_8_Group_playertitle;
                break;
            case "Blend.SampleData.SampleDataSource.Group.img":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.Group");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "img", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_9_Group_img;
                xamlMember.Setter = set_9_Group_img;
                break;
            case "Blend.SampleData.SampleDataSource.SampleDataSource.rotation":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.SampleDataSource");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "rotation", "Blend.SampleData.SampleDataSource.rotation");
                xamlMember.Getter = get_10_SampleDataSource_rotation;
                xamlMember.SetIsReadOnly();
                break;
            case "Blend.SampleData.SampleDataSource.rotationItem.player_name":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.rotationItem");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "player_name", "String");
                xamlMember.Getter = get_11_rotationItem_player_name;
                xamlMember.Setter = set_11_rotationItem_player_name;
                break;
            case "Blend.SampleData.SampleDataSource.rotationItem.rotation_img":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Blend.SampleData.SampleDataSource.rotationItem");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "rotation_img", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_12_rotationItem_rotation_img;
                xamlMember.Setter = set_12_rotationItem_rotation_img;
                break;
            case "App2.ViewModel.ViewModelLocator.Main":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ViewModel.ViewModelLocator");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "Main", "App2.ViewModel.MainViewModel");
                xamlMember.Getter = get_13_ViewModelLocator_Main;
                xamlMember.SetIsReadOnly();
                break;
            case "App2.ExpaControl.ExpanderControl.IsExpanded":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ExpaControl.ExpanderControl");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_ExpanderControl_IsExpanded;
                xamlMember.Setter = set_14_ExpanderControl_IsExpanded;
                break;
            case "App2.ExpaControl.ExpanderControl.NonExpandableHeader":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ExpaControl.ExpanderControl");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "NonExpandableHeader", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_ExpanderControl_NonExpandableHeader;
                xamlMember.Setter = set_15_ExpanderControl_NonExpandableHeader;
                break;
            case "App2.ExpaControl.ExpanderControl.Expander":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ExpaControl.ExpanderControl");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "Expander", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_ExpanderControl_Expander;
                xamlMember.Setter = set_16_ExpanderControl_Expander;
                break;
            case "App2.ExpaControl.HeaderedItemsControl.Header":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ExpaControl.HeaderedItemsControl");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_HeaderedItemsControl_Header;
                xamlMember.Setter = set_17_HeaderedItemsControl_Header;
                break;
            case "App2.ExpaControl.ExpanderControl.ExpanderTemplate":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ExpaControl.ExpanderControl");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "ExpanderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_ExpanderControl_ExpanderTemplate;
                xamlMember.Setter = set_18_ExpanderControl_ExpanderTemplate;
                break;
            case "App2.ExpaControl.ExpanderControl.NonExpandableHeaderTemplate":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ExpaControl.ExpanderControl");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "NonExpandableHeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_ExpanderControl_NonExpandableHeaderTemplate;
                xamlMember.Setter = set_19_ExpanderControl_NonExpandableHeaderTemplate;
                break;
            case "App2.ExpaControl.ExpanderControl.HasItems":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ExpaControl.ExpanderControl");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "HasItems", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_ExpanderControl_HasItems;
                xamlMember.Setter = set_20_ExpanderControl_HasItems;
                break;
            case "App2.ExpaControl.ExpanderControl.IsNonExpandable":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ExpaControl.ExpanderControl");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "IsNonExpandable", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_ExpanderControl_IsNonExpandable;
                xamlMember.Setter = set_21_ExpanderControl_IsNonExpandable;
                break;
            case "App2.ExpaControl.HeaderedItemsControl.HeaderTemplate":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ExpaControl.HeaderedItemsControl");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_HeaderedItemsControl_HeaderTemplate;
                xamlMember.Setter = set_22_HeaderedItemsControl_HeaderTemplate;
                break;
            case "App2.ExpaControl.HeaderedItemsControl.ItemContainerStyle":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ExpaControl.HeaderedItemsControl");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "ItemContainerStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_HeaderedItemsControl_ItemContainerStyle;
                xamlMember.Setter = set_23_HeaderedItemsControl_ItemContainerStyle;
                break;
            case "App2.ViewModel.MainViewModel.GiveDetails":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ViewModel.MainViewModel");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "GiveDetails", "GalaSoft.MvvmLight.Command.RelayCommand`1<Object>");
                xamlMember.Getter = get_24_MainViewModel_GiveDetails;
                xamlMember.SetIsReadOnly();
                break;
            case "App2.ViewModel.MainViewModel.AllPlayers":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ViewModel.MainViewModel");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "AllPlayers", "System.Collections.ObjectModel.ObservableCollection`1<App2.Model.Players>");
                xamlMember.Getter = get_25_MainViewModel_AllPlayers;
                xamlMember.SetIsReadOnly();
                break;
            case "App2.Model.Players.id":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Players");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "id", "Int32");
                xamlMember.Getter = get_26_Players_id;
                xamlMember.Setter = set_26_Players_id;
                break;
            case "App2.Model.Players.img":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Players");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "img", "String");
                xamlMember.Getter = get_27_Players_img;
                xamlMember.Setter = set_27_Players_img;
                break;
            case "App2.Model.Players.playername":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Players");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "playername", "String");
                xamlMember.Getter = get_28_Players_playername;
                xamlMember.Setter = set_28_Players_playername;
                break;
            case "App2.Model.Players.playertitle":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Players");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "playertitle", "String");
                xamlMember.Getter = get_29_Players_playertitle;
                xamlMember.Setter = set_29_Players_playertitle;
                break;
            case "App2.Model.Players.primary_secondary":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Players");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "primary_secondary", "String");
                xamlMember.Getter = get_30_Players_primary_secondary;
                xamlMember.Setter = set_30_Players_primary_secondary;
                break;
            case "App2.Model.Players.IP":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Players");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "IP", "Int32");
                xamlMember.Getter = get_31_Players_IP;
                xamlMember.Setter = set_31_Players_IP;
                break;
            case "App2.Model.Players.RP":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Players");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "RP", "Int32");
                xamlMember.Getter = get_32_Players_RP;
                xamlMember.Setter = set_32_Players_RP;
                break;
            case "App2.Model.Players.imgBig":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Players");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "imgBig", "String");
                xamlMember.Getter = get_33_Players_imgBig;
                xamlMember.Setter = set_33_Players_imgBig;
                break;
            case "App2.ViewModel.MainViewModel.AllAbilities":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ViewModel.MainViewModel");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "AllAbilities", "System.Collections.ObjectModel.ObservableCollection`1<App2.Model.Abilities>");
                xamlMember.Getter = get_34_MainViewModel_AllAbilities;
                xamlMember.SetIsReadOnly();
                break;
            case "App2.Model.Abilities.imgAbility":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Abilities");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "imgAbility", "String");
                xamlMember.Getter = get_35_Abilities_imgAbility;
                xamlMember.Setter = set_35_Abilities_imgAbility;
                break;
            case "App2.Model.Abilities.ability":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Abilities");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "ability", "String");
                xamlMember.Getter = get_36_Abilities_ability;
                xamlMember.Setter = set_36_Abilities_ability;
                break;
            case "App2.Model.Abilities.abilityDesc":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Abilities");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "abilityDesc", "String");
                xamlMember.Getter = get_37_Abilities_abilityDesc;
                xamlMember.Setter = set_37_Abilities_abilityDesc;
                break;
            case "App2.ViewModel.MainViewModel.AllItems":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ViewModel.MainViewModel");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "AllItems", "System.Collections.ObjectModel.ObservableCollection`1<App2.Model.Items>");
                xamlMember.Getter = get_38_MainViewModel_AllItems;
                xamlMember.SetIsReadOnly();
                break;
            case "App2.Model.Items.itemName":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Items");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "itemName", "String");
                xamlMember.Getter = get_39_Items_itemName;
                xamlMember.Setter = set_39_Items_itemName;
                break;
            case "App2.Model.Items.itemCost":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Items");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "itemCost", "String");
                xamlMember.Getter = get_40_Items_itemCost;
                xamlMember.Setter = set_40_Items_itemCost;
                break;
            case "App2.Model.Items.itemBonuses":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Items");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "itemBonuses", "String");
                xamlMember.Getter = get_41_Items_itemBonuses;
                xamlMember.Setter = set_41_Items_itemBonuses;
                break;
            case "App2.Model.Items.itemImg":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Items");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "itemImg", "String");
                xamlMember.Getter = get_42_Items_itemImg;
                xamlMember.Setter = set_42_Items_itemImg;
                break;
            case "App2.Model.Items.active":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Items");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "active", "String");
                xamlMember.Getter = get_43_Items_active;
                xamlMember.Setter = set_43_Items_active;
                break;
            case "App2.Model.Items.passive":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.Items");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "passive", "String");
                xamlMember.Getter = get_44_Items_passive;
                xamlMember.Setter = set_44_Items_passive;
                break;
            case "App2.ViewModel.MainViewModel.AllBuildsInto":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ViewModel.MainViewModel");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "AllBuildsInto", "System.Collections.ObjectModel.ObservableCollection`1<App2.Model.Items>");
                xamlMember.Getter = get_45_MainViewModel_AllBuildsInto;
                xamlMember.SetIsReadOnly();
                break;
            case "App2.ViewModel.MainViewModel.AllEnchantments":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ViewModel.MainViewModel");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "AllEnchantments", "System.Collections.ObjectModel.ObservableCollection`1<App2.Model.Items>");
                xamlMember.Getter = get_46_MainViewModel_AllEnchantments;
                xamlMember.SetIsReadOnly();
                break;
            case "App2.ViewModel.MainViewModel.AllRecipes":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ViewModel.MainViewModel");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "AllRecipes", "System.Collections.ObjectModel.ObservableCollection`1<App2.Model.Items>");
                xamlMember.Getter = get_47_MainViewModel_AllRecipes;
                xamlMember.SetIsReadOnly();
                break;
            case "App2.ViewModel.MainViewModel.GroupedExemple":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.ViewModel.MainViewModel");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "GroupedExemple", "System.Collections.ObjectModel.ObservableCollection`1<App2.Model.GroupInfoList>");
                xamlMember.Getter = get_48_MainViewModel_GroupedExemple;
                xamlMember.Setter = set_48_MainViewModel_GroupedExemple;
                break;
            case "App2.Model.GroupInfoList.Key":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("App2.Model.GroupInfoList");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "Key", "Object");
                xamlMember.Getter = get_49_GroupInfoList_Key;
                xamlMember.Setter = set_49_GroupInfoList_Key;
                break;
            case "System.Collections.ObjectModel.Collection`1<App2.Model.Players>.Count":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<App2.Model.Players>");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "Count", "Int32");
                xamlMember.Getter = get_50_Collection_Count;
                xamlMember.SetIsReadOnly();
                break;
            case "GalaSoft.MvvmLight.ViewModelBase.IsInDesignMode":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "IsInDesignMode", "Boolean");
                xamlMember.Getter = get_51_ViewModelBase_IsInDesignMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_52_Interaction_Behaviors;
                xamlMember.Setter = set_52_Interaction_Behaviors;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_EventTriggerBehavior_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.EventName":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "EventName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_EventTriggerBehavior_EventName;
                xamlMember.Setter = set_54_EventTriggerBehavior_EventName;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.SourceObject":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "SourceObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_EventTriggerBehavior_SourceObject;
                xamlMember.Setter = set_55_EventTriggerBehavior_SourceObject;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.AssociatedObject":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_56_EventTriggerBehavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.NavigateToPageAction.TargetPage":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.NavigateToPageAction");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "TargetPage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_NavigateToPageAction_TargetPage;
                xamlMember.Setter = set_57_NavigateToPageAction_TargetPage;
                break;
            case "Microsoft.Xaml.Interactions.Core.NavigateToPageAction.Parameter":
                userType = (global::App2.App2_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.NavigateToPageAction");
                xamlMember = new global::App2.App2_XamlTypeInfo.XamlMember(this, "Parameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_NavigateToPageAction_Parameter;
                xamlMember.Setter = set_58_NavigateToPageAction_Parameter;
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::App2.App2_XamlTypeInfo.XamlSystemBaseType
    {
        global::App2.App2_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::App2.App2_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::App2.App2_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::App2.App2_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


