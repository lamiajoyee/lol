	<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:App2"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
	x:Class="App2.ItemsPage"
    mc:Ignorable="d"   
    >
	<Page.Resources>
		<Thickness x:Key="PhoneBorderThickness">2.5</Thickness>
		<FontFamily x:Key="PhoneFontFamilyNormal">Segoe WP</FontFamily>
		<FontWeight x:Key="PhoneButtonFontWeight">Semibold</FontWeight>
		<x:Double x:Key="TextStyleLargeFontSize">18.14</x:Double>
		<x:Double x:Key="PhoneButtonMinHeight">57.5</x:Double>
		<x:Double x:Key="PhoneButtonMinWidth">109</x:Double>
		<Thickness x:Key="PhoneTouchTargetOverhang">0,9.5</Thickness>
		<SolidColorBrush x:Key="ButtonDisabledBackgroundThemeBrush" Color="Transparent"/>
		<Style x:Key="ButtonStyle1" TargetType="Button">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="{ThemeResource PhoneForegroundBrush}"/>
			<Setter Property="Foreground" Value="{ThemeResource PhoneForegroundBrush}"/>
			<Setter Property="BorderThickness" Value="{ThemeResource PhoneBorderThickness}"/>
			<Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
			<Setter Property="FontWeight" Value="{ThemeResource PhoneButtonFontWeight}"/>
			<Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
			<Setter Property="Padding" Value="9.5,0"/>
			<Setter Property="MinHeight" Value="{ThemeResource PhoneButtonMinHeight}"/>
			<Setter Property="MinWidth" Value="{ThemeResource PhoneButtonMinWidth}"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid x:Name="Grid" Background="Transparent">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition From="Pressed" To="PointerOver">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
										<VisualTransition From="PointerOver" To="Normal">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
										<VisualTransition From="Pressed" To="Normal">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="PointerOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<PointerDownThemeAnimation Storyboard.TargetName="Grid"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Border" Background="{TemplateBinding Background}" Margin="0">
								<ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0"/>
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle2" TargetType="Button">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="{ThemeResource PhoneForegroundBrush}"/>
			<Setter Property="Foreground" Value="{ThemeResource PhoneForegroundBrush}"/>
			<Setter Property="BorderThickness" Value="{ThemeResource PhoneBorderThickness}"/>
			<Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
			<Setter Property="FontWeight" Value="{ThemeResource PhoneButtonFontWeight}"/>
			<Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
			<Setter Property="Padding" Value="9.5,0"/>
			<Setter Property="MinHeight" Value="{ThemeResource PhoneButtonMinHeight}"/>
			<Setter Property="MinWidth" Value="{ThemeResource PhoneButtonMinWidth}"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid x:Name="Grid" Background="Transparent" Margin="0,0,0,0.5" Width="92">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition From="Pressed" To="PointerOver">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
										<VisualTransition From="PointerOver" To="Normal">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
										<VisualTransition From="Pressed" To="Normal">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="PointerOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<PointerDownThemeAnimation Storyboard.TargetName="Grid"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" >
								<ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle3" TargetType="Button">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="{ThemeResource PhoneForegroundBrush}"/>
			<Setter Property="Foreground" Value="{ThemeResource PhoneForegroundBrush}"/>
			<Setter Property="BorderThickness" Value="{ThemeResource PhoneBorderThickness}"/>
			<Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
			<Setter Property="FontWeight" Value="{ThemeResource PhoneButtonFontWeight}"/>
			<Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
			<Setter Property="Padding" Value="9.5,0"/>
			<Setter Property="MinHeight" Value="{ThemeResource PhoneButtonMinHeight}"/>
			<Setter Property="MinWidth" Value="{ThemeResource PhoneButtonMinWidth}"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid x:Name="Grid" Background="Transparent" Width="67">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition From="Pressed" To="PointerOver">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
										<VisualTransition From="PointerOver" To="Normal">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
										<VisualTransition From="Pressed" To="Normal">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="PointerOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<PointerDownThemeAnimation Storyboard.TargetName="Grid"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
								<ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle4" TargetType="Button">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="{ThemeResource PhoneForegroundBrush}"/>
			<Setter Property="Foreground" Value="{ThemeResource PhoneForegroundBrush}"/>
			<Setter Property="BorderThickness" Value="{ThemeResource PhoneBorderThickness}"/>
			<Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
			<Setter Property="FontWeight" Value="{ThemeResource PhoneButtonFontWeight}"/>
			<Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
			<Setter Property="Padding" Value="9.5,0"/>
			<Setter Property="MinHeight" Value="{ThemeResource PhoneButtonMinHeight}"/>
			<Setter Property="MinWidth" Value="{ThemeResource PhoneButtonMinWidth}"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid x:Name="Grid" Background="Transparent">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition From="Pressed" To="PointerOver">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
										<VisualTransition From="PointerOver" To="Normal">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
										<VisualTransition From="Pressed" To="Normal">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="PointerOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<PointerDownThemeAnimation Storyboard.TargetName="Grid"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
								<ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle5" TargetType="Button">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="{ThemeResource PhoneForegroundBrush}"/>
			<Setter Property="Foreground" Value="{ThemeResource PhoneForegroundBrush}"/>
			<Setter Property="BorderThickness" Value="{ThemeResource PhoneBorderThickness}"/>
			<Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
			<Setter Property="FontWeight" Value="{ThemeResource PhoneButtonFontWeight}"/>
			<Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
			<Setter Property="Padding" Value="9.5,0"/>
			<Setter Property="MinHeight" Value="{ThemeResource PhoneButtonMinHeight}"/>
			<Setter Property="MinWidth" Value="{ThemeResource PhoneButtonMinWidth}"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid x:Name="Grid" Background="Transparent">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition From="Pressed" To="PointerOver">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
										<VisualTransition From="PointerOver" To="Normal">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
										<VisualTransition From="Pressed" To="Normal">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="PointerOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<PointerDownThemeAnimation Storyboard.TargetName="Grid"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="{ThemeResource PhoneTouchTargetOverhang}">
								<ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle6" TargetType="Button">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="{ThemeResource PhoneForegroundBrush}"/>
			<Setter Property="Foreground" Value="{ThemeResource PhoneForegroundBrush}"/>
			<Setter Property="BorderThickness" Value="{ThemeResource PhoneBorderThickness}"/>
			<Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
			<Setter Property="FontWeight" Value="{ThemeResource PhoneButtonFontWeight}"/>
			<Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
			<Setter Property="Padding" Value="9.5,0"/>
			<Setter Property="MinHeight" Value="{ThemeResource PhoneButtonMinHeight}"/>
			<Setter Property="MinWidth" Value="{ThemeResource PhoneButtonMinWidth}"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid x:Name="Grid" Background="Transparent">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition From="Pressed" To="PointerOver">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
										<VisualTransition From="PointerOver" To="Normal">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
										<VisualTransition From="Pressed" To="Normal">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
											</Storyboard>
										</VisualTransition>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="PointerOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<PointerDownThemeAnimation Storyboard.TargetName="Grid"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="{ThemeResource PhoneTouchTargetOverhang}">
								<ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Thickness x:Key="PivotPortraitThemePadding">19,38,0,0</Thickness>
		<Thickness x:Key="PivotLandscapeThemePadding">19,25,0,0</Thickness>
		<Style x:Key="ContentControlStyle1" TargetType="ContentControl">
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ContentControl">
						<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="PivotStyle1" TargetType="Pivot">
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="Foreground" Value="{ThemeResource PhoneForegroundBrush}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<Grid/>
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Pivot">
						<Grid x:Name="RootElement" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" MinHeight="38.333"/>
								<RowDefinition/>

							</Grid.RowDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="Orientation">
									<VisualState x:Name="Portrait">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TitleContentControl">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotPortraitThemePadding}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Landscape">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TitleContentControl">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotLandscapeThemePadding}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentControl x:Name="TitleContentControl" ContentTemplate="{TemplateBinding TitleTemplate}" Content="{TemplateBinding Title}" Style="{StaticResource ContentControlStyle1}" Margin="19,38,0,0.333" FontSize="21.333"/>
							<ScrollViewer x:Name="ScrollViewer" HorizontalSnapPointsAlignment="Center" HorizontalSnapPointsType="MandatorySingle" HorizontalScrollBarVisibility="Hidden" Margin="0,38,0,0.667" Template="{StaticResource ScrollViewerScrollBarlessTemplate}" VerticalSnapPointsType="None" VerticalScrollBarVisibility="Disabled" VerticalScrollMode="Disabled" VerticalContentAlignment="Stretch" ZoomMode="Disabled" Grid.RowSpan="2" FontSize="24">
								<Grid Height="573" Width="400000">
									<PivotPanel x:Name="Panel" VerticalAlignment="Stretch">
										<PivotHeaderPanel x:Name="Header" Height="42" VerticalAlignment="Bottom" Background="{StaticResource pivotHeaderBg}">
											<PivotHeaderPanel.RenderTransform>
												<CompositeTransform x:Name="HeaderTranslateTransform" TranslateX="0"/>
											</PivotHeaderPanel.RenderTransform>
										
										</PivotHeaderPanel>
										<ItemsPresenter x:Name="PivotItemPresenter" Margin="0">
											<ItemsPresenter.RenderTransform>
												<TranslateTransform x:Name="ItemsPresenterTranslateTransform" X="0"/>
											</ItemsPresenter.RenderTransform>
										</ItemsPresenter>
									</PivotPanel>
								</Grid>
							</ScrollViewer>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Thickness x:Key="PivotItemMargin">19,22.5,19,0</Thickness>
		<Style x:Key="PivotItemStyle1" TargetType="PivotItem">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Margin" Value="{ThemeResource PivotItemMargin}"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="PivotItem">
						<Grid Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="Pivot">
									<VisualState x:Name="Right"/>
									<VisualState x:Name="Left"/>
									<VisualState x:Name="Center"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ListViewStyle1" TargetType="ListView">
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="TabNavigation" Value="Once"/>
			<Setter Property="IsSwipeEnabled" Value="True"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
			<Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
			<Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
			<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
			<Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
			<Setter Property="ItemContainerTransitions">
				<Setter.Value>
					<TransitionCollection>
						<AddDeleteThemeTransition/>
						<ReorderThemeTransition/>
					</TransitionCollection>
				</Setter.Value>
			</Setter>
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<ItemsStackPanel Orientation="Vertical"/>
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListView">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
							<ScrollViewer x:Name="ScrollViewer" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}" HorizontalContentAlignment="Stretch">
								<ItemsPresenter FooterTransitions="{TemplateBinding FooterTransitions}" FooterTemplate="{TemplateBinding FooterTemplate}" Footer="{TemplateBinding Footer}" HeaderTemplate="{TemplateBinding HeaderTemplate}" Header="{TemplateBinding Header}" HeaderTransitions="{TemplateBinding HeaderTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</ScrollViewer>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="beguni_img_bg" Color="#88331C81"/>
		<SolidColorBrush x:Key="champs" Color="#FFF7D04A"/>
		<SolidColorBrush x:Key="attColor" Color="#C9B89C3F"/>
		<SolidColorBrush x:Key="defColor" Color="#D393B464"/>
		<SolidColorBrush x:Key="abiColor" Color="#D839A5AA"/>
		<SolidColorBrush x:Key="diffColor" Color="#C5C35252"/>
		<SolidColorBrush x:Key="beguniPanelBg" Color="#A32A1E52"/>
		<DataTemplate x:Key="DataTemplate1">
			<Grid Background="{StaticResource beguniPanelBg}"  Margin="0,0,0,12">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="100"/>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="auto"/>
				</Grid.ColumnDefinitions>
				<Grid  Background="{StaticResource beguni_img_bg}" Height="100" Width="100" >
					
					<Rectangle HorizontalAlignment="Left" Height="80" Margin="10,10,0,0" StrokeThickness="5" VerticalAlignment="Top" Width="80" >
						<Rectangle.Fill>
							<ImageBrush Stretch="UniformToFill" ImageSource="{Binding AllItems[0].itemImg}"/>
						</Rectangle.Fill>
					</Rectangle>
				</Grid>
				<StackPanel Grid.Column="1" Margin="12,6,0,0">
					<TextBlock x:Name="textBlock" Text="{Binding itemName}" FontSize="18.667" />
					<TextBlock x:Name="textBlock1" Text="{Binding playertitle}" FontStyle="Italic" FontSize="13.333"/>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<StackPanel Orientation="Horizontal">
							<Image Source="Assets/15px-IpPoints.png" Stretch="None" HorizontalAlignment="Left"/>
							<TextBlock Text="{Binding IP}" Margin="6,0,0,0"/>
						</StackPanel>
						<StackPanel Grid.Column="1" Orientation="Horizontal">
							<Image Source="Assets/15px-RpPoints.png" Stretch="None" HorizontalAlignment="Left"/>
							<TextBlock Text="{Binding RP}" Margin="6,0,0,0"/>
						</StackPanel>
					</Grid>
					<TextBlock x:Name="textBlock2" Text="{Binding primary_secondary}" FontSize="14.667"/>
				</StackPanel>
				
				<Grid Grid.Column="2" Margin="0,12,12,12">
					<Grid.RowDefinitions>
						<RowDefinition Height="5*"/>
						<RowDefinition Height="5*"/>
						<RowDefinition Height="5*"/>
						<RowDefinition Height="5*"/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="25"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
				</Grid>
			</Grid>
		</DataTemplate>
		<LinearGradientBrush x:Key="bgNavUp" EndPoint="0.5,1" StartPoint="0.5,0">
			<GradientStop Color="#FFF7D04A" Offset="1"/>
			<GradientStop Color="#FF0C045D"/>
			<GradientStop Color="#FF272066" Offset="0.47"/>
			<GradientStop Color="#FF2B1E4D" Offset="0.922"/>
		</LinearGradientBrush>
		<FontFamily x:Key="ContentControlThemeFontFamily">Segoe WP</FontFamily>
		<x:Double x:Key="ControlContentThemeFontSize">12</x:Double>
		<Thickness x:Key="ListViewItemMargin">0</Thickness>
		<SolidColorBrush x:Key="CheckBoxBackgroundThemeBrush" Color="Transparent"/>
		<x:Double x:Key="CheckBoxBorderThemeThickness">2.5</x:Double>
		<x:Double x:Key="ListViewItemContentOffsetX">-40.5</x:Double>
		<Thickness x:Key="ListViewItemMultiselectCheckBoxMargin">0,9.5,0,0</Thickness>
		<Thickness x:Key="GridViewItemMultiselectBorderThickness">2.5</Thickness>
		<x:Double x:Key="ListViewItemDisabledThemeOpacity">0.55</x:Double>
		<x:Double x:Key="ListViewItemContentTranslateX">40.5</x:Double>
		<x:Double x:Key="ListViewItemReorderHintThemeOffset">32</x:Double>
		<Style x:Key="ListViewItemStyle1" TargetType="ListViewItem">
			<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
			<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="TabNavigation" Value="Local"/>
			<Setter Property="IsHoldingEnabled" Value="False"/>
			<Setter Property="Margin" Value="{ThemeResource ListViewItemMargin}"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListViewItem">
						<Border x:Name="OuterContainer" RenderTransformOrigin="0.5,0.5">
							<Border.RenderTransform>
								<ScaleTransform x:Name="ContentScaleTransform"/>
							</Border.RenderTransform>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition From="Pressed" To="Normal">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="TiltContainer"/>
											</Storyboard>
										</VisualTransition>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<PointerDownThemeAnimation Storyboard.TargetName="TiltContainer"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="CheckboxPressed">
										<Storyboard>
											<PointerDownThemeAnimation Storyboard.TargetName="CheckboxTiltContainer"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimation Duration="0" To="{ThemeResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledBorderThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="SelectedBorder">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedGlyph">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="DataVirtualizationStates">
									<VisualState x:Name="DataAvailable"/>
									<VisualState x:Name="DataPlaceholder">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="MultiSelectStates">
									<VisualStateGroup.Transitions>
										<VisualTransition From="ListMultiSelect" GeneratedDuration="0:0:0.15" To="NoMultiSelect"/>
										<VisualTransition From="NoMultiSelect" GeneratedDuration="0:0:0.15" To="ListMultiSelect"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="NoMultiSelect"/>
									<VisualState x:Name="ListMultiSelect">
										<Storyboard>
											<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="CheckboxContainerTranslateTransform"/>
											<DoubleAnimation Duration="0" To="{ThemeResource ListViewItemContentTranslateX}" Storyboard.TargetProperty="X" Storyboard.TargetName="ContentBorderTranslateTransform"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="GridMultiSelect">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ReorderModeStates">
									<VisualStateGroup.Transitions>
										<VisualTransition From="ReorderEnabled" GeneratedDuration="00:00:00.2" To="ReorderDisabled"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="ReorderEnabled">
										<Storyboard>
											<DropTargetItemThemeAnimation Storyboard.TargetName="OuterContainer"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Reorderable">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ContentScaleTransform">
												<LinearDoubleKeyFrame KeyTime="00:00:00.075" Value="1.05"/>
												<LinearDoubleKeyFrame KeyTime="00:00:00.2" Value="1.0"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ContentScaleTransform">
												<LinearDoubleKeyFrame KeyTime="00:00:00.075" Value="1.05"/>
												<LinearDoubleKeyFrame KeyTime="00:00:00.2" Value="1.0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="ReorderDisabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ReorderHintStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="NoReorderHint"/>
									<VisualState x:Name="BottomReorderHint">
										<Storyboard>
											<DragOverThemeAnimation Direction="Bottom" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Storyboard.TargetName="ReorderHintContent"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="RightReorderHint">
										<Storyboard>
											<DragOverThemeAnimation Direction="Right" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Storyboard.TargetName="ReorderHintContent"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="TopReorderHint">
										<Storyboard>
											<DragOverThemeAnimation Direction="Top" ToOffset="0" Storyboard.TargetName="ReorderHintContent"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="LeftReorderHint">
										<Storyboard>
											<DragOverThemeAnimation Direction="Left" ToOffset="0" Storyboard.TargetName="ReorderHintContent"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid x:Name="ReorderHintContent" Background="Transparent">
								<Border x:Name="CheckboxTiltContainer" HorizontalAlignment="Left" Margin="{ThemeResource ListViewItemMultiselectCheckBoxMargin}" VerticalAlignment="Top">
									<Border x:Name="CheckboxOuterContainer">
										<Border.Clip>
											<RectangleGeometry Rect="0,0,25.5,25.5"/>
										</Border.Clip>
										<Grid x:Name="CheckboxContainer">
											<Grid.RenderTransform>
												<TranslateTransform x:Name="CheckboxContainerTranslateTransform" X="{ThemeResource ListViewItemContentOffsetX}"/>
											</Grid.RenderTransform>
											<Rectangle x:Name="NormalRectangle" Fill="{ThemeResource CheckBoxBackgroundThemeBrush}" Height="25.5" Stroke="{ThemeResource CheckBoxBorderThemeBrush}" StrokeThickness="{ThemeResource CheckBoxBorderThemeThickness}" Width="25.5"/>
											<Path x:Name="CheckGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{ThemeResource CheckBoxForegroundThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="17" IsHitTestVisible="False" Opacity="0" Stretch="Fill" StrokeThickness="2.5" StrokeLineJoin="Round" VerticalAlignment="Center" Width="18.5"/>
										</Grid>
									</Border>
								</Border>
								<Border x:Name="ContentContainer">
									<Border x:Name="TiltContainer">
										<Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
											<Border.RenderTransform>
												<TranslateTransform x:Name="ContentBorderTranslateTransform"/>
											</Border.RenderTransform>
											<Grid>
												<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
												<TextBlock x:Name="PlaceholderTextBlock" AutomationProperties.AccessibilityView="Raw" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
												<Rectangle x:Name="PlaceholderRect" Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
											</Grid>
										</Border>
									</Border>
								</Border>
								<Border x:Name="SelectedBorder" BorderBrush="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}" BorderThickness="{ThemeResource GridViewItemMultiselectBorderThickness}" IsHitTestVisible="False" Opacity="0">
									<Grid x:Name="SelectedCheckMark" HorizontalAlignment="Right" Height="34" Opacity="0" VerticalAlignment="Top" Width="34">
										<Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}" Stretch="Fill"/>
										<Path x:Name="SelectedGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{ThemeResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="14.5" Margin="0,1,1,0" Stretch="Fill" VerticalAlignment="Top" Width="17"/>
									</Grid>
								</Border>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<DataTemplate x:Key="DataTemplate2">
			<StackPanel Margin="0,12">
				<Ellipse Height="50" Margin="0" Width="50">
					<Ellipse.Fill>
						<ImageBrush Stretch="Fill" ImageSource="{Binding rotation_img}" />
					</Ellipse.Fill>
				</Ellipse>
				<TextBlock x:Name="textBlock" Text="{Binding player_name}"  Margin="0,0,0,0" FontSize="16"  Height="20" Width="97"  />
			</StackPanel>
		</DataTemplate>
		<SolidColorBrush x:Key="ListBoxBorderThemeBrush" Color="Transparent"/>
		<Thickness x:Key="ListBoxBorderThemeThickness">1.5</Thickness>
		<Style x:Key="ListBoxStyle1" TargetType="ListBox">
			<Setter Property="Foreground" Value="{ThemeResource ListBoxForegroundThemeBrush}"/>
			<Setter Property="Background" Value="{ThemeResource ListBoxBackgroundThemeBrush}"/>
			<Setter Property="BorderBrush" Value="{ThemeResource ListBoxBorderThemeBrush}"/>
			<Setter Property="BorderThickness" Value="{ThemeResource ListBoxBorderThemeThickness}"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
			<Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
			<Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
			<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
			<Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="TabNavigation" Value="Once"/>
			<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
			<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<VirtualizingStackPanel Orientation="Horizontal"/>
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListBox">
						<Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="LayoutRoot">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ListBoxDisabledForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ScrollViewer x:Name="ScrollViewer" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}" HorizontalScrollMode="Enabled">
								<ItemsPresenter/>
							</ScrollViewer>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="SemanticZoomStyle1" TargetType="SemanticZoom">
			<Setter Property="Padding" Value="0"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="TabNavigation" Value="Once"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="SemanticZoom">
						<Grid>
							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
								<Grid Margin="{TemplateBinding Padding}">
									<ContentPresenter x:Name="ZoomedInPresenter" Content="{TemplateBinding ZoomedInView}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
									<Popup x:Name="Popup">
										<Popup.ChildTransitions>
											<TransitionCollection>
												<PopupThemeTransition/>
											</TransitionCollection>
										</Popup.ChildTransitions>
										<Border x:Name="PopupBorder">
											<ContentPresenter x:Name="ZoomedOutPresenter" Content="{TemplateBinding ZoomedOutView}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										</Border>
									</Popup>
								</Grid>
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<DataTemplate x:Key="DataTemplate3">
			<Grid>
				<TextBlock Text="{Binding playername}"/>
			</Grid>
		</DataTemplate>
		<CollectionViewSource x:Name="CVS" Source="{Binding GroupedExemple}" IsSourceGrouped="True"/>
        <JumpListItemBackgroundConverter x:Key="ListItemBackgroundConverter"/>
        <JumpListItemForegroundConverter x:Key="ListItemForegroundConverter"/>
        <Style x:Key="GridViewStyle1" TargetType="GridView">
        	<Setter Property="IsTabStop" Value="False"/>
        	<Setter Property="TabNavigation" Value="Once"/>
        	<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        	<Setter Property="VerticalContentAlignment" Value="Top"/>
        	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
        	<Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
        	<Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
        	<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        	<Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
        	<Setter Property="IsSwipeEnabled" Value="True"/>
        	<Setter Property="ItemContainerTransitions">
        		<Setter.Value>
        			<TransitionCollection>
        				<AddDeleteThemeTransition/>
        				<ReorderThemeTransition/>
        			</TransitionCollection>
        		</Setter.Value>
        	</Setter>
        	<Setter Property="ItemsPanel">
        		<Setter.Value>
        			<ItemsPanelTemplate>
        				<ItemsWrapGrid Orientation="Horizontal"/>
        			</ItemsPanelTemplate>
        		</Setter.Value>
        	</Setter>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="GridView">
        				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
        					<ScrollViewer x:Name="ScrollViewer" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
        						<ItemsPresenter FooterTransitions="{TemplateBinding FooterTransitions}" FooterTemplate="{TemplateBinding FooterTemplate}" Footer="{TemplateBinding Footer}" HeaderTemplate="{TemplateBinding HeaderTemplate}" Header="{TemplateBinding Header}" HeaderTransitions="{TemplateBinding HeaderTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="12,0"/>
        					</ScrollViewer>
        				</Border>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <DataTemplate x:Key="DataTemplate4">
        	<Grid Margin="6" Background="{StaticResource beguniPanelBg}" Width="164" Height="120">
        		<Grid.ColumnDefinitions>
        			<ColumnDefinition Width="107*"/>
        			<ColumnDefinition Width="57*"/>
        		</Grid.ColumnDefinitions>
        		<Grid Margin="0,0,0,0">
        			<Grid.RowDefinitions>
        				<RowDefinition Height="1*"/>
        				<RowDefinition Height="2*"/>
        			</Grid.RowDefinitions>
        			<Grid Background="{StaticResource beguni_img_bg}" Margin="0,0,0,0">
        				<Grid.RowDefinitions>
        					<RowDefinition Height="*"/>
        					<RowDefinition Height="*"/>
        				</Grid.RowDefinitions>
        				<TextBlock Text="{Binding playername}" FontSize="16" Margin="6,0,0,0" />
        				<TextBlock Text="{Binding primary_secondary}" Grid.Row="1" FontSize="13.333" Margin="6,0,0,0"  />
        			</Grid>
        			<Grid Grid.Row="1" Margin="0,6,0,0">
        				<Grid.ColumnDefinitions>
        					<ColumnDefinition/>
        					<ColumnDefinition Width="3*"/>
        				</Grid.ColumnDefinitions>
        				<Grid.RowDefinitions>
        					<RowDefinition Height="15*"/>
        					<RowDefinition Height="15*"/>
        					<RowDefinition Height="15*"/>
        					<RowDefinition Height="15*"/>
        				</Grid.RowDefinitions>
        				<TextBlock Text="ATT" FontSize="10.667" Margin="6,0,0,0"/>
        				<TextBlock Grid.Row="1" Text="DEF" FontSize="10.667" Margin="6,0,0,0" />
        				<TextBlock Grid.Row="2" Text="ABI" FontSize="10.667" Margin="6,0,0,0" />
        				<TextBlock Grid.Row="3" Text="DIFF" FontSize="10.667" Margin="6,0,0,0" />
        				<Rectangle Fill="{StaticResource attColor}" Width="58" HorizontalAlignment="Left" Grid.Column="1" Height="6" VerticalAlignment="Center" />
        				<Rectangle Grid.Row="1" Fill="{StaticResource defColor}" HorizontalAlignment="Left" Width="49" Grid.Column="1" Height="6" VerticalAlignment="Center" />
        				<Rectangle Grid.Row="2" Fill="{StaticResource abiColor}" HorizontalAlignment="Left" Width="60" Height="6" Grid.Column="1" VerticalAlignment="Center" />
        				<Rectangle Grid.Row="3" Fill="{StaticResource diffColor}" HorizontalAlignment="Left" Width="65" Height="6" Grid.Column="1" VerticalAlignment="Center"/>
        			</Grid>
        		</Grid>
        		<Grid Margin="0,0,0,0" Grid.Column="1">
        			<Image Source="{Binding img}" Stretch="UniformToFill"/>
					
        		</Grid>
        	</Grid>
        </DataTemplate>
        <DataTemplate x:Key="DataTemplate5">
        	<Grid Width="360" Height="150" Margin="0,0,0,12">
        		<Image Source="{Binding imgBig}" Stretch="UniformToFill"/>
        		<Grid Height="50" VerticalAlignment="Bottom" Background="{StaticResource beguni_img_bg}">
        			<Grid.ColumnDefinitions>
        				<ColumnDefinition/>
        				<ColumnDefinition/>
        			</Grid.ColumnDefinitions>
        			<TextBlock Text="{Binding playername}" FontSize="21.333" Margin="12,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
        			<Grid Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,12,0">
        				<Grid.ColumnDefinitions>
        					<ColumnDefinition/>
        					<ColumnDefinition/>
        				</Grid.ColumnDefinitions>
        				<StackPanel Orientation="Horizontal">
        					<Image Source="Assets/15px-IpPoints.png" HorizontalAlignment="Left" Stretch="None"/>
        					<TextBlock Text="{Binding IP}" Margin="12,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16"/>
        				</StackPanel>
        				<StackPanel Grid.Column="1" Orientation="Horizontal" Margin="24,0,0,0">
        					<Image Source="Assets/15px-RpPoints.png" Stretch="None" HorizontalAlignment="Left"/>
        					<TextBlock Text="{Binding RP}" Margin="12,0,0,0" VerticalAlignment="Center" FontSize="16"/>
        				</StackPanel>
        			</Grid>
        		</Grid>
        	</Grid>
        </DataTemplate>
		<DataTemplate x:Key="DataTemplate6">
			<Grid/>
		</DataTemplate>
		<DataTemplate x:Key="DataTemplate7">
			<Grid Margin="0,0,0,12" Background="{StaticResource beguni_img_bg}" Height="100">
				<Interactivity:Interaction.Behaviors>
					<Core:EventTriggerBehavior EventName="Tapped">
						<Core:NavigateToPageAction TargetPage="App2.Item"/>
					</Core:EventTriggerBehavior>
				</Interactivity:Interaction.Behaviors>
				<Grid.ColumnDefinitions>
        				<ColumnDefinition Width="100"/>
        				<ColumnDefinition Width="260"/>
						
        		</Grid.ColumnDefinitions>
				<Grid Background="#FF331C81">
					<Rectangle HorizontalAlignment="Center" Height="80"  VerticalAlignment="Center" Width="80">
						<Rectangle.Fill>
							<ImageBrush Stretch="Fill" ImageSource="{Binding itemImg}"/>
						</Rectangle.Fill>
					</Rectangle>
				</Grid>
				<Grid Grid.Column="1" Background="{StaticResource beguniPanelBg}">
					<Grid.RowDefinitions>
						<RowDefinition Height="30"/>
						<RowDefinition Height="*"/>
						<RowDefinition Height="2*"/>
					</Grid.RowDefinitions>
					<TextBlock Text="{Binding itemName}" Margin="12,6,0,0" Foreground="{StaticResource champs}" FontSize="18.667" TextWrapping="Wrap" ></TextBlock>
					<StackPanel Margin="12,0,0,0" Orientation="Horizontal" Grid.Row="1">
						<TextBlock Text="Cost:"  Height="30" Foreground="{StaticResource champs}" FontSize="14.667" />
						<TextBlock Text="{Binding itemCost}" Height="30" FontSize="14.667" Margin="6,0,0,0" />
					</StackPanel>
					<TextBlock Text="{Binding itemBonuses}" Margin="12,0,6,6" TextWrapping="Wrap" FontSize="14.667" Grid.Row="2"/>

				</Grid>
			</Grid>
		</DataTemplate>
	</Page.Resources>

	<Page.DataContext>
		<Binding Mode="OneWay" Path="Main" Source="{StaticResource Locator}"/>
	</Page.DataContext>

		<Grid d:DataContext="{d:DesignData /SampleData/ItemsSampleData.xaml}">
			<Grid.Background>
				<ImageBrush ImageSource="Assets/blrr.png" Stretch="UniformToFill"/>
			</Grid.Background>
			<Grid.RowDefinitions>
				<RowDefinition Height="85"/>
				<RowDefinition/>
			</Grid.RowDefinitions>
		
			<StackPanel Width="{Binding Width, ElementName=page, Mode=OneWay}" Background="{StaticResource bgTopmostPanel}" Orientation="Horizontal" ScrollViewer.HorizontalScrollBarVisibility="Visible">
				<Image x:Name="image" Source="lol-logo-league-of-legends.png" VerticalAlignment="Bottom" Canvas.ZIndex="24" Margin="0,0,0,0" HorizontalAlignment="Left">
					<Interactivity:Interaction.Behaviors>
						<Core:EventTriggerBehavior EventName="PointerPressed">
							<Core:NavigateToPageAction TargetPage="App2.FirstPage"/>
						</Core:EventTriggerBehavior>
					</Interactivity:Interaction.Behaviors>
				</Image>
				<StackPanel Orientation="Horizontal" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Disabled" UseLayoutRounding="True">	
					<HyperlinkButton Content="CHAMPIONS" HorizontalAlignment="Center" VerticalAlignment="Stretch" FontSize="18.667"  Padding="12,3,0,4">
						<Interactivity:Interaction.Behaviors>
							<Core:EventTriggerBehavior EventName="Click">
								<Core:NavigateToPageAction TargetPage="App2.MainPage"/>
							</Core:EventTriggerBehavior>
						</Interactivity:Interaction.Behaviors>
					</HyperlinkButton>
					<HyperlinkButton Content="ITEMS"  FontSize="18.667" HorizontalAlignment="Center" VerticalAlignment="Stretch" Padding="12,3,0,4" Foreground="{StaticResource champs}" />

					<HyperlinkButton HorizontalAlignment="Center" VerticalAlignment="Stretch" FontSize="18.667" Content="SKINS" Padding="12,3,0,4"/>
					<HyperlinkButton Content="MINIONS"  FontSize="18.667" HorizontalAlignment="Center" VerticalAlignment="Stretch" Padding="12,3,0,4" />
					<HyperlinkButton Content="SUMMONER"  FontSize="18.667" HorizontalAlignment="Center" VerticalAlignment="Stretch" Padding="12,3,0,4" />
				</StackPanel>
			</StackPanel>
			<Grid Grid.Row="1" Margin="0,-10,0,0"  >
				<Pivot Style="{StaticResource PivotStyle1}" Canvas.ZIndex="-90">
					<PivotItem Style="{StaticResource PivotItemStyle1}">
						<PivotItem.Header>
							<Grid>
								<TextBlock x:Name="textBlock" FontSize="21.333" VerticalAlignment="Bottom" Margin="0,12,0,0">
									<Run Text="BASIC"/>
								</TextBlock>
							</Grid>
						</PivotItem.Header>
						<Grid>
							<ListView ItemsSource="{Binding AllItems}" ItemTemplate="{StaticResource DataTemplate7}"/>
						</Grid>
					</PivotItem>
					<PivotItem>
						<PivotItem.Header>
							<TextBlock x:Name="textBlock1" FontSize="21" VerticalAlignment="Bottom" Margin="0,12,0,0">
								<Run Text="ADVANCED"/>
							</TextBlock>
						</PivotItem.Header>
						
					
					</PivotItem>
					<PivotItem>
						<PivotItem.Header>
							<TextBlock x:Name="textBlock2" FontSize="21" VerticalAlignment="Bottom" Margin="0,12,0,0">
								<Run Text="LEGENDARY"/>
							</TextBlock>
						</PivotItem.Header>
					</PivotItem>
					<PivotItem>
						<PivotItem.Header>
							<TextBlock FontSize="21" VerticalAlignment="Bottom" Margin="0,12,0,0">
								<Run Text="MYTHICAL"/>
							</TextBlock>
						</PivotItem.Header>
					</PivotItem>
					<PivotItem>
						<PivotItem.Header>
							<TextBlock FontSize="21" VerticalAlignment="Bottom" Margin="0,12,0,0">
								<Run Text="CONSUMABLES"/>
							</TextBlock>
						</PivotItem.Header>
					</PivotItem>
					<PivotItem>
						<PivotItem.Header>
							<TextBlock FontSize="21" VerticalAlignment="Bottom" Margin="0,12,0,0">
								<Run Text="REMOVED"/>
							</TextBlock>
						</PivotItem.Header>
					</PivotItem>
				</Pivot></Grid>
		</Grid>
</Page>

